// Generated by view binder compiler. Do not edit!
package net.developermaster.kotlincanivetesuico.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.developermaster.kotlincanivetesuico.R;

public final class FragmentCodigoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText idTextInputCodigo;

  @NonNull
  public final TextInputEditText idTextInputXml;

  @NonNull
  public final TextInputLayout textInputCodigoLayout;

  @NonNull
  public final TextInputLayout textInputXmlLayout;

  private FragmentCodigoBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText idTextInputCodigo, @NonNull TextInputEditText idTextInputXml,
      @NonNull TextInputLayout textInputCodigoLayout, @NonNull TextInputLayout textInputXmlLayout) {
    this.rootView = rootView;
    this.idTextInputCodigo = idTextInputCodigo;
    this.idTextInputXml = idTextInputXml;
    this.textInputCodigoLayout = textInputCodigoLayout;
    this.textInputXmlLayout = textInputXmlLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCodigoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCodigoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_codigo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCodigoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.id_TextInput_codigo;
      TextInputEditText idTextInputCodigo = ViewBindings.findChildViewById(rootView, id);
      if (idTextInputCodigo == null) {
        break missingId;
      }

      id = R.id.id_TextInput_xml;
      TextInputEditText idTextInputXml = ViewBindings.findChildViewById(rootView, id);
      if (idTextInputXml == null) {
        break missingId;
      }

      id = R.id.textInput_codigo_layout;
      TextInputLayout textInputCodigoLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputCodigoLayout == null) {
        break missingId;
      }

      id = R.id.textInput_xml_layout;
      TextInputLayout textInputXmlLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputXmlLayout == null) {
        break missingId;
      }

      return new FragmentCodigoBinding((ConstraintLayout) rootView, idTextInputCodigo,
          idTextInputXml, textInputCodigoLayout, textInputXmlLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
