// Generated by view binder compiler. Do not edit!
package net.developermaster.kotlincanivetesuico.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.developermaster.kotlincanivetesuico.R;

public final class FragmentLivedataContadorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ConstraintLayout;

  @NonNull
  public final Button btnContar;

  @NonNull
  public final FloatingActionButton fabCodigo;

  @NonNull
  public final FloatingActionButton fabXml;

  @NonNull
  public final TextInputLayout idTextInputIdadeLayout;

  @NonNull
  public final TextInputLayout idTextInputNomeLayout;

  @NonNull
  public final TextInputEditText textInputIdade;

  @NonNull
  public final TextInputEditText textInputNome;

  @NonNull
  public final TextView textViewIdade;

  @NonNull
  public final TextView textViewNome;

  private FragmentLivedataContadorBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout ConstraintLayout, @NonNull Button btnContar,
      @NonNull FloatingActionButton fabCodigo, @NonNull FloatingActionButton fabXml,
      @NonNull TextInputLayout idTextInputIdadeLayout,
      @NonNull TextInputLayout idTextInputNomeLayout, @NonNull TextInputEditText textInputIdade,
      @NonNull TextInputEditText textInputNome, @NonNull TextView textViewIdade,
      @NonNull TextView textViewNome) {
    this.rootView = rootView;
    this.ConstraintLayout = ConstraintLayout;
    this.btnContar = btnContar;
    this.fabCodigo = fabCodigo;
    this.fabXml = fabXml;
    this.idTextInputIdadeLayout = idTextInputIdadeLayout;
    this.idTextInputNomeLayout = idTextInputNomeLayout;
    this.textInputIdade = textInputIdade;
    this.textInputNome = textInputNome;
    this.textViewIdade = textViewIdade;
    this.textViewNome = textViewNome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLivedataContadorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLivedataContadorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_livedata_contador, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLivedataContadorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout ConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.btn_contar;
      Button btnContar = ViewBindings.findChildViewById(rootView, id);
      if (btnContar == null) {
        break missingId;
      }

      id = R.id.fabCodigo;
      FloatingActionButton fabCodigo = ViewBindings.findChildViewById(rootView, id);
      if (fabCodigo == null) {
        break missingId;
      }

      id = R.id.fabXml;
      FloatingActionButton fabXml = ViewBindings.findChildViewById(rootView, id);
      if (fabXml == null) {
        break missingId;
      }

      id = R.id.id_TextInput_idade_layout;
      TextInputLayout idTextInputIdadeLayout = ViewBindings.findChildViewById(rootView, id);
      if (idTextInputIdadeLayout == null) {
        break missingId;
      }

      id = R.id.id_TextInput_nome_layout;
      TextInputLayout idTextInputNomeLayout = ViewBindings.findChildViewById(rootView, id);
      if (idTextInputNomeLayout == null) {
        break missingId;
      }

      id = R.id.textInput_idade;
      TextInputEditText textInputIdade = ViewBindings.findChildViewById(rootView, id);
      if (textInputIdade == null) {
        break missingId;
      }

      id = R.id.textInput_nome;
      TextInputEditText textInputNome = ViewBindings.findChildViewById(rootView, id);
      if (textInputNome == null) {
        break missingId;
      }

      id = R.id.textView_idade;
      TextView textViewIdade = ViewBindings.findChildViewById(rootView, id);
      if (textViewIdade == null) {
        break missingId;
      }

      id = R.id.textView_nome;
      TextView textViewNome = ViewBindings.findChildViewById(rootView, id);
      if (textViewNome == null) {
        break missingId;
      }

      return new FragmentLivedataContadorBinding((ConstraintLayout) rootView, ConstraintLayout,
          btnContar, fabCodigo, fabXml, idTextInputIdadeLayout, idTextInputNomeLayout,
          textInputIdade, textInputNome, textViewIdade, textViewNome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
