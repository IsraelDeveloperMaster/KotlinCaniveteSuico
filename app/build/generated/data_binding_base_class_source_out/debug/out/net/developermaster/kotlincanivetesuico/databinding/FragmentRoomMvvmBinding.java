// Generated by view binder compiler. Do not edit!
package net.developermaster.kotlincanivetesuico.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.developermaster.kotlincanivetesuico.R;

public final class FragmentRoomMvvmBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAdicionar;

  @NonNull
  public final Button btnListaId;

  @NonNull
  public final Button btnListaIdade;

  @NonNull
  public final Button btnListaNome;

  @NonNull
  public final Button btnListaTodos;

  @NonNull
  public final FloatingActionButton fabCodigo;

  @NonNull
  public final FloatingActionButton fabXml;

  @NonNull
  public final LinearLayout layoutVertical01;

  @NonNull
  public final Guideline linhaGuiaVertical;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final TextInputEditText textInputId;

  @NonNull
  public final TextInputLayout textInputIdLayout;

  @NonNull
  public final TextInputEditText textInputIdade;

  @NonNull
  public final TextInputLayout textInputIdadeLayout;

  @NonNull
  public final TextInputEditText textInputNome;

  @NonNull
  public final TextInputLayout textInputNomeLayout;

  private FragmentRoomMvvmBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAdicionar,
      @NonNull Button btnListaId, @NonNull Button btnListaIdade, @NonNull Button btnListaNome,
      @NonNull Button btnListaTodos, @NonNull FloatingActionButton fabCodigo,
      @NonNull FloatingActionButton fabXml, @NonNull LinearLayout layoutVertical01,
      @NonNull Guideline linhaGuiaVertical, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerview, @NonNull TextInputEditText textInputId,
      @NonNull TextInputLayout textInputIdLayout, @NonNull TextInputEditText textInputIdade,
      @NonNull TextInputLayout textInputIdadeLayout, @NonNull TextInputEditText textInputNome,
      @NonNull TextInputLayout textInputNomeLayout) {
    this.rootView = rootView;
    this.btnAdicionar = btnAdicionar;
    this.btnListaId = btnListaId;
    this.btnListaIdade = btnListaIdade;
    this.btnListaNome = btnListaNome;
    this.btnListaTodos = btnListaTodos;
    this.fabCodigo = fabCodigo;
    this.fabXml = fabXml;
    this.layoutVertical01 = layoutVertical01;
    this.linhaGuiaVertical = linhaGuiaVertical;
    this.progressBar = progressBar;
    this.recyclerview = recyclerview;
    this.textInputId = textInputId;
    this.textInputIdLayout = textInputIdLayout;
    this.textInputIdade = textInputIdade;
    this.textInputIdadeLayout = textInputIdadeLayout;
    this.textInputNome = textInputNome;
    this.textInputNomeLayout = textInputNomeLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRoomMvvmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRoomMvvmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_room_mvvm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRoomMvvmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdicionar;
      Button btnAdicionar = ViewBindings.findChildViewById(rootView, id);
      if (btnAdicionar == null) {
        break missingId;
      }

      id = R.id.btnListaId;
      Button btnListaId = ViewBindings.findChildViewById(rootView, id);
      if (btnListaId == null) {
        break missingId;
      }

      id = R.id.btnListaIdade;
      Button btnListaIdade = ViewBindings.findChildViewById(rootView, id);
      if (btnListaIdade == null) {
        break missingId;
      }

      id = R.id.btnListaNome;
      Button btnListaNome = ViewBindings.findChildViewById(rootView, id);
      if (btnListaNome == null) {
        break missingId;
      }

      id = R.id.btnListaTodos;
      Button btnListaTodos = ViewBindings.findChildViewById(rootView, id);
      if (btnListaTodos == null) {
        break missingId;
      }

      id = R.id.fabCodigo;
      FloatingActionButton fabCodigo = ViewBindings.findChildViewById(rootView, id);
      if (fabCodigo == null) {
        break missingId;
      }

      id = R.id.fabXml;
      FloatingActionButton fabXml = ViewBindings.findChildViewById(rootView, id);
      if (fabXml == null) {
        break missingId;
      }

      id = R.id.layoutVertical_01;
      LinearLayout layoutVertical01 = ViewBindings.findChildViewById(rootView, id);
      if (layoutVertical01 == null) {
        break missingId;
      }

      id = R.id.linhaGuiaVertical;
      Guideline linhaGuiaVertical = ViewBindings.findChildViewById(rootView, id);
      if (linhaGuiaVertical == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.textInput_id;
      TextInputEditText textInputId = ViewBindings.findChildViewById(rootView, id);
      if (textInputId == null) {
        break missingId;
      }

      id = R.id.textInput_id_layout;
      TextInputLayout textInputIdLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputIdLayout == null) {
        break missingId;
      }

      id = R.id.textInput_idade;
      TextInputEditText textInputIdade = ViewBindings.findChildViewById(rootView, id);
      if (textInputIdade == null) {
        break missingId;
      }

      id = R.id.textInput_idade_layout;
      TextInputLayout textInputIdadeLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputIdadeLayout == null) {
        break missingId;
      }

      id = R.id.textInput_nome;
      TextInputEditText textInputNome = ViewBindings.findChildViewById(rootView, id);
      if (textInputNome == null) {
        break missingId;
      }

      id = R.id.textInput_nome_layout;
      TextInputLayout textInputNomeLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputNomeLayout == null) {
        break missingId;
      }

      return new FragmentRoomMvvmBinding((ConstraintLayout) rootView, btnAdicionar, btnListaId,
          btnListaIdade, btnListaNome, btnListaTodos, fabCodigo, fabXml, layoutVertical01,
          linhaGuiaVertical, progressBar, recyclerview, textInputId, textInputIdLayout,
          textInputIdade, textInputIdadeLayout, textInputNome, textInputNomeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
