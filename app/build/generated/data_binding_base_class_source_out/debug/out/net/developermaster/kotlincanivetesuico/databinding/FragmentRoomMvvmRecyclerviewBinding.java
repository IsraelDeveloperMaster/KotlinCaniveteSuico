// Generated by view binder compiler. Do not edit!
package net.developermaster.kotlincanivetesuico.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.developermaster.kotlincanivetesuico.R;

public final class FragmentRoomMvvmRecyclerviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAtualizar;

  @NonNull
  public final Button btnDeletar;

  @NonNull
  public final TextInputLayout textInputIdadeLayout;

  @NonNull
  public final TextInputEditText textInputIdadeRoomMVVM;

  @NonNull
  public final TextInputLayout textInputNomeLayout;

  @NonNull
  public final TextInputEditText textInputNomeRoomMVVM;

  private FragmentRoomMvvmRecyclerviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnAtualizar, @NonNull Button btnDeletar,
      @NonNull TextInputLayout textInputIdadeLayout,
      @NonNull TextInputEditText textInputIdadeRoomMVVM,
      @NonNull TextInputLayout textInputNomeLayout,
      @NonNull TextInputEditText textInputNomeRoomMVVM) {
    this.rootView = rootView;
    this.btnAtualizar = btnAtualizar;
    this.btnDeletar = btnDeletar;
    this.textInputIdadeLayout = textInputIdadeLayout;
    this.textInputIdadeRoomMVVM = textInputIdadeRoomMVVM;
    this.textInputNomeLayout = textInputNomeLayout;
    this.textInputNomeRoomMVVM = textInputNomeRoomMVVM;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRoomMvvmRecyclerviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRoomMvvmRecyclerviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_room_mvvm_recyclerview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRoomMvvmRecyclerviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAtualizar;
      Button btnAtualizar = ViewBindings.findChildViewById(rootView, id);
      if (btnAtualizar == null) {
        break missingId;
      }

      id = R.id.btnDeletar;
      Button btnDeletar = ViewBindings.findChildViewById(rootView, id);
      if (btnDeletar == null) {
        break missingId;
      }

      id = R.id.textInput_idade_layout;
      TextInputLayout textInputIdadeLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputIdadeLayout == null) {
        break missingId;
      }

      id = R.id.textInput_idade_roomMVVM;
      TextInputEditText textInputIdadeRoomMVVM = ViewBindings.findChildViewById(rootView, id);
      if (textInputIdadeRoomMVVM == null) {
        break missingId;
      }

      id = R.id.textInput_nome_layout;
      TextInputLayout textInputNomeLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputNomeLayout == null) {
        break missingId;
      }

      id = R.id.textInput_nome_roomMVVM;
      TextInputEditText textInputNomeRoomMVVM = ViewBindings.findChildViewById(rootView, id);
      if (textInputNomeRoomMVVM == null) {
        break missingId;
      }

      return new FragmentRoomMvvmRecyclerviewBinding((ConstraintLayout) rootView, btnAtualizar,
          btnDeletar, textInputIdadeLayout, textInputIdadeRoomMVVM, textInputNomeLayout,
          textInputNomeRoomMVVM);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
