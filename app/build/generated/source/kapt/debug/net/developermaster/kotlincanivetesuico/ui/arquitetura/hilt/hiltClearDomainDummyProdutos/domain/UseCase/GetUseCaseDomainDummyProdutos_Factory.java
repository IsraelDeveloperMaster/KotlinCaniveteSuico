// Generated by Dagger (https://dagger.dev).
package net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyProdutos.domain.UseCase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyProdutos.domain.repositoryDomain.RepositorioDummyDomain;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class GetUseCaseDomainDummyProdutos_Factory implements Factory<GetUseCaseDomainDummyProdutos> {
  private final Provider<RepositorioDummyDomain> repositorioDummyDomain_ApiJsonProvider;

  public GetUseCaseDomainDummyProdutos_Factory(
      Provider<RepositorioDummyDomain> repositorioDummyDomain_ApiJsonProvider) {
    this.repositorioDummyDomain_ApiJsonProvider = repositorioDummyDomain_ApiJsonProvider;
  }

  @Override
  public GetUseCaseDomainDummyProdutos get() {
    return newInstance(repositorioDummyDomain_ApiJsonProvider.get());
  }

  public static GetUseCaseDomainDummyProdutos_Factory create(
      Provider<RepositorioDummyDomain> repositorioDummyDomain_ApiJsonProvider) {
    return new GetUseCaseDomainDummyProdutos_Factory(repositorioDummyDomain_ApiJsonProvider);
  }

  public static GetUseCaseDomainDummyProdutos newInstance(
      RepositorioDummyDomain repositorioDummyDomain_ApiJson) {
    return new GetUseCaseDomainDummyProdutos(repositorioDummyDomain_ApiJson);
  }
}
