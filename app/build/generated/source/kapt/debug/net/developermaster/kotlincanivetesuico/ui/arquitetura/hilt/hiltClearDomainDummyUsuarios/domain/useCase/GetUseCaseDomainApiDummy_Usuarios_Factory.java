// Generated by Dagger (https://dagger.dev).
package net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyUsuarios.domain.useCase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyUsuarios.domain.repository.RepositorioDummyUsuarios;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class GetUseCaseDomainApiDummy_Usuarios_Factory implements Factory<GetUseCaseDomainApiDummy_Usuarios> {
  private final Provider<RepositorioDummyUsuarios> interfacerepository_DomainApiDummyProvider;

  public GetUseCaseDomainApiDummy_Usuarios_Factory(
      Provider<RepositorioDummyUsuarios> interfacerepository_DomainApiDummyProvider) {
    this.interfacerepository_DomainApiDummyProvider = interfacerepository_DomainApiDummyProvider;
  }

  @Override
  public GetUseCaseDomainApiDummy_Usuarios get() {
    return newInstance(interfacerepository_DomainApiDummyProvider.get());
  }

  public static GetUseCaseDomainApiDummy_Usuarios_Factory create(
      Provider<RepositorioDummyUsuarios> interfacerepository_DomainApiDummyProvider) {
    return new GetUseCaseDomainApiDummy_Usuarios_Factory(interfacerepository_DomainApiDummyProvider);
  }

  public static GetUseCaseDomainApiDummy_Usuarios newInstance(
      RepositorioDummyUsuarios interfacerepository_DomainApiDummy) {
    return new GetUseCaseDomainApiDummy_Usuarios(interfacerepository_DomainApiDummy);
  }
}
