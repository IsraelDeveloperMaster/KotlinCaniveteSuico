// Generated by Dagger (https://dagger.dev).
package net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltDependenciasNomeadas.classes;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class Banda_Factory implements Factory<Banda> {
  private final Provider<InterfaceInstrumento> guitarraProvider;

  private final Provider<InterfaceInstrumento> violaoProvider;

  private final Provider<InterfaceInstrumento> bateriaProvider;

  public Banda_Factory(Provider<InterfaceInstrumento> guitarraProvider,
      Provider<InterfaceInstrumento> violaoProvider,
      Provider<InterfaceInstrumento> bateriaProvider) {
    this.guitarraProvider = guitarraProvider;
    this.violaoProvider = violaoProvider;
    this.bateriaProvider = bateriaProvider;
  }

  @Override
  public Banda get() {
    return newInstance(guitarraProvider.get(), violaoProvider.get(), bateriaProvider.get());
  }

  public static Banda_Factory create(Provider<InterfaceInstrumento> guitarraProvider,
      Provider<InterfaceInstrumento> violaoProvider,
      Provider<InterfaceInstrumento> bateriaProvider) {
    return new Banda_Factory(guitarraProvider, violaoProvider, bateriaProvider);
  }

  public static Banda newInstance(InterfaceInstrumento guitarra, InterfaceInstrumento violao,
      InterfaceInstrumento bateria) {
    return new Banda(guitarra, violao, bateria);
  }
}
