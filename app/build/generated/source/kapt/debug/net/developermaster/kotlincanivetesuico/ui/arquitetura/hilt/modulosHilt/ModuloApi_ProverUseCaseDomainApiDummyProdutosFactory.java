// Generated by Dagger (https://dagger.dev).
package net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.modulosHilt;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyProdutos.domain.UseCase.GetUseCaseDomainDummyProdutos;
import net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyProdutos.domain.repositoryDomain.RepositorioDummyDomain;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ModuloApi_ProverUseCaseDomainApiDummyProdutosFactory implements Factory<GetUseCaseDomainDummyProdutos> {
  private final Provider<RepositorioDummyDomain> repositorydomaindummyProdutosProvider;

  public ModuloApi_ProverUseCaseDomainApiDummyProdutosFactory(
      Provider<RepositorioDummyDomain> repositorydomaindummyProdutosProvider) {
    this.repositorydomaindummyProdutosProvider = repositorydomaindummyProdutosProvider;
  }

  @Override
  public GetUseCaseDomainDummyProdutos get() {
    return proverUseCaseDomainApiDummyProdutos(repositorydomaindummyProdutosProvider.get());
  }

  public static ModuloApi_ProverUseCaseDomainApiDummyProdutosFactory create(
      Provider<RepositorioDummyDomain> repositorydomaindummyProdutosProvider) {
    return new ModuloApi_ProverUseCaseDomainApiDummyProdutosFactory(repositorydomaindummyProdutosProvider);
  }

  public static GetUseCaseDomainDummyProdutos proverUseCaseDomainApiDummyProdutos(
      RepositorioDummyDomain repositorydomaindummyProdutos) {
    return Preconditions.checkNotNullFromProvides(ModuloApi.INSTANCE.proverUseCaseDomainApiDummyProdutos(repositorydomaindummyProdutos));
  }
}
