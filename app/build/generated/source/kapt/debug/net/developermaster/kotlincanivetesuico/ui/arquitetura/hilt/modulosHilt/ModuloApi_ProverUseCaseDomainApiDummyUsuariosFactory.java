// Generated by Dagger (https://dagger.dev).
package net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.modulosHilt;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyUsuarios.domain.repository.RepositorioDummyUsuarios;
import net.developermaster.kotlincanivetesuico.ui.arquitetura.hilt.hiltClearDomainDummyUsuarios.domain.useCase.GetUseCaseDomainApiDummy_Usuarios;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ModuloApi_ProverUseCaseDomainApiDummyUsuariosFactory implements Factory<GetUseCaseDomainApiDummy_Usuarios> {
  private final Provider<RepositorioDummyUsuarios> repositorioDummyUsuariosProvider;

  public ModuloApi_ProverUseCaseDomainApiDummyUsuariosFactory(
      Provider<RepositorioDummyUsuarios> repositorioDummyUsuariosProvider) {
    this.repositorioDummyUsuariosProvider = repositorioDummyUsuariosProvider;
  }

  @Override
  public GetUseCaseDomainApiDummy_Usuarios get() {
    return proverUseCaseDomainApiDummyUsuarios(repositorioDummyUsuariosProvider.get());
  }

  public static ModuloApi_ProverUseCaseDomainApiDummyUsuariosFactory create(
      Provider<RepositorioDummyUsuarios> repositorioDummyUsuariosProvider) {
    return new ModuloApi_ProverUseCaseDomainApiDummyUsuariosFactory(repositorioDummyUsuariosProvider);
  }

  public static GetUseCaseDomainApiDummy_Usuarios proverUseCaseDomainApiDummyUsuarios(
      RepositorioDummyUsuarios RepositorioDummyUsuarios) {
    return Preconditions.checkNotNullFromProvides(ModuloApi.INSTANCE.proverUseCaseDomainApiDummyUsuarios(RepositorioDummyUsuarios));
  }
}
