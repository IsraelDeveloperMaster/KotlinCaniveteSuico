// Generated by Dagger (https://dagger.dev).
package net.developermaster.kotlincanivetesuico.ui.compose.scaffoldMVVM.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import net.developermaster.kotlincanivetesuico.ui.compose.View.ScaffoldMVVM.data.Repository.RepositoryComposeMvvm;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ViewModelComposeMvvm_Factory implements Factory<ViewModelComposeMvvm> {
  private final Provider<RepositoryComposeMvvm> repositoryComposeMvvmProvider;

  public ViewModelComposeMvvm_Factory(
      Provider<RepositoryComposeMvvm> repositoryComposeMvvmProvider) {
    this.repositoryComposeMvvmProvider = repositoryComposeMvvmProvider;
  }

  @Override
  public ViewModelComposeMvvm get() {
    return newInstance(repositoryComposeMvvmProvider.get());
  }

  public static ViewModelComposeMvvm_Factory create(
      Provider<RepositoryComposeMvvm> repositoryComposeMvvmProvider) {
    return new ViewModelComposeMvvm_Factory(repositoryComposeMvvmProvider);
  }

  public static ViewModelComposeMvvm newInstance(RepositoryComposeMvvm repositoryComposeMvvm) {
    return new ViewModelComposeMvvm(repositoryComposeMvvm);
  }
}
